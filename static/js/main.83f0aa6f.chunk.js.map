{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","Drawer.jsx","app.js","index.js"],"names":["Header","Footer","Form","handleApiCall","dispatcha","selectedUrl","React","useState","method","setmethod","formDat","setformData","url","seturl","useEffect","onSubmit","e","preventDefault","formData","target","value","json","JSON","parse","type","payload","unparsed","localStorage","getItem","setItem","stringify","name","onChange","className","onClick","id","htmlFor","rows","cols","Results","data","src","getColor","drawer","locassssslStorage","selectUrl","open","setOpen","Button","size","appearance","Drawer","placement","onClose","Title","Actions","Body","map","item","index","color","App","initialState","requestParams","ls","useReducer","state","action","dispatch","callApi","resObj","axios","then","res","count","length","Headers","headers","body","results","Fragment","Loader","content","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.83f0aa6f.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss'\nexport default function Header (){\n\n\n    return (\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    );\n  \n}\n","import React from 'react';\nimport './footer.scss';\nexport default function Footer (){\n\n  return <footer>&copy; 2018</footer>;\n}\n\n","import React from \"react\";\nimport \"./form.scss\";\nimport Input from \"rsuite/Input\";\nimport \"rsuite/dist/rsuite.min.css\";\n\nexport default function Form({ handleApiCall, dispatcha,selectedUrl }) {\n  const [method, setmethod] = React.useState(\"get\");\n  const [formDat, setformData] = React.useState({});\n  const [url, seturl] = React.useState(\"\");\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      url: e.target.url.value || \"https://pokeapi.co/api/v2/pokemon\",\n      json: e.target.JSON.value ? JSON.parse(e.target.JSON.value) : {},\n      method: method,\n    };\n    setformData(formData);\n    dispatcha({ type: \"submit\", payload: formDat });\n\n    let unparsed = JSON.parse(localStorage.getItem(\"history\")) || [];\n\n      localStorage.setItem(\"history\", JSON.stringify([formDat, ...unparsed]));\n    dispatcha({\n      type: \"localStorage\",\n      payload: JSON.parse(localStorage.getItem(\"history\") ),\n    });\n  };\n  React.useEffect(() => {\n    seturl(selectedUrl);\n  },[selectedUrl] )\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>URL: </span>\n          <input name=\"url\" type=\"text\" onChange={(e)=> seturl(e.target.value)} value={url}/>\n          <button type=\"submit\">GO!</button>\n        </label>\n        <label className=\"methods\">\n          <span onClick={() => setmethod(\"get\")} id=\"get\">\n            GET\n          </span>\n          <span onClick={() => setmethod(\"post\")} id=\"post\">\n            POST\n          </span>\n          <span onClick={() => setmethod(\"put\")} id=\"put\">\n            PUT\n          </span>\n          <span onClick={() => setmethod(\"delete\")} id=\"delete\">\n            DELETE\n          </span>\n        </label>\n        <label htmlFor=\"w3review\">JSON</label>\n        <textarea id=\"w3review\" name=\"JSON\" rows=\"4\" cols=\"50\" />\n      </form>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactJson from 'react-json-view'\n\nimport \"rsuite/dist/rsuite.min.css\"\n export default function Results (data){\n\n//  console.log(data);\n \n\n    return (\n      <section>\n        <ReactJson src={data} />\n     \n      </section>\n      \n  \n    );\n  \n}\n\n\n","import { Drawer } from \"rsuite\";\nimport { useState } from \"react\";\nimport Button from \"rsuite/Button\";\n\n\nconst getColor = (method) => {\n  switch (method) {\n    case \"get\":\n      return \"green\";\n    case \"post\":\n      return \"blue\";\n    case \"put\":\n      return \"orange\";\n    case \"delete\":\n      return \"red\";\n    default:\n      return \"violet\";\n  }\n};\nexport default function drawer({ locassssslStorage, selectUrl }) {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (key) => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)} size={\"sm\"}  appearance=\"primary\"   >\n        Show Recently viewed API's\n      </Button>\n\n      <Drawer\n        size={\"lg\"}\n        placement={\"top\"}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Drawer.Header>\n          <Drawer.Title>Recently viewed</Drawer.Title>\n          <Drawer.Actions>\n            <Button onClick={() => setOpen(false)}>Cancel</Button>\n          </Drawer.Actions>\n        </Drawer.Header>\n        <Drawer.Body>\n    \n          {locassssslStorage\n            ? locassssslStorage.map((item, index) => (\n                <div key={index}>\n                  <Button\n                    color={getColor(item.method)}\n                    appearance=\"primary\"\n                    onClick={() => {\n                      selectUrl({type: \"selectedUrl\", payload: item.url});\n                      setOpen(false);\n                    }}\n                  >\n                    \n                    {item.url}\n                  </Button>\n               <br />\n              </div>\n              ))\n            : null}\n        </Drawer.Body>\n      </Drawer>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport \"./app.scss\";\n\nimport { Loader } from 'rsuite';\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Form from \"./components/form\";\nimport Results from \"./components/results\";\nimport axios from \"axios\";\nimport Drawer from \"./Drawer\";\n\nexport default function App() {\n  const [open, setOpen] = useState(false);\n  let initialState = {\n    requestParams: {},\n    data: null,\n    ls: JSON.parse(localStorage.getItem(\"history\")) || [],\n    selectedUrl: \"\",\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  let callApi = (requestParams) => {\n    let resObj = {};\n    axios[requestParams.method](requestParams.url, requestParams.json).then(\n      (res) => {\n        resObj = {\n          count: res.data.count || res.data.length,\n          Headers: res.headers,\n          body: res.data,\n        };\n        const data = {\n          count: resObj.count,\n          results: resObj,\n        };\n\n        dispatch({ type: \"data\", payload: data });\n        // setdata(data);\n      }\n    );\n\n    \n  };\n  \n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"submit\":\n        return {\n          ...state,\n          requestParams: action.payload, \n        };\n      case \"data\":\n        return {\n          ...state,\n          data: action.payload,}\n      case \"localStorage\":\n\n        return {\n          ...state,\n          ls: action.payload,\n        }\n        case \"selectedUrl\":\n          return {\n            ...state,\n            selectedUrl: action.payload,\n          } \n      default:\n        return state;\n    }\n  }\n\nuseEffect(() => {\n  if (state.requestParams.url) {\n    callApi(state.requestParams);\n  }\n}, [state.requestParams]);\n  return (\n    <React.Fragment>\n      <Header />\n      \n      <div data-testid=\"method\">Request Method: {state.requestParams.method}</div>\n      <div>URL: {state.requestParams.url}</div>\n      <br/>\n      <br/> \n      <Drawer locassssslStorage={state.ls} selectUrl={dispatch} setOpen={setOpen}/>\n      <br/>\n      <br/>\n      <Form handleApiCall={callApi} dispatcha={dispatch} selectedUrl={state.selectedUrl}/>\n      <br/>\n      <br/>\n    {  state.data ? <Results data={state.data} /> : <Loader size=\"lg\" content=\"Loading...\" />}\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\n\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}